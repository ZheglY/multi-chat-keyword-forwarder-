import asyncio
from aiogram import Router
from aiogram.enums import ChatType
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from utils.logger import get_logger
from states.all_states import JoinStates
from utils.join_groups import join_groups
from utils.special_func import is_user_allowed, clean_links

join_router = Router()
logger = get_logger(__name__)


@join_router.message(Command("join"))
async def save_filters(message: Message, state: FSMContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /join"""
        if message.chat.type != ChatType.PRIVATE:
            return

        if not is_user_allowed(message.from_user.id):
            await message.answer("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω.")
            return

        text = (
                "üîç –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≥—Ä—É–ø–ø—ã –≤ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—Å—Ç—É–ø–∏—Ç—å (–í–≤–æ–¥ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–ª–µ–ª –∏ –≤ –ª—é–±–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –Ω–æ –ª—É—á—à–µ –∫–∞–∫ channel2)\n\n"
                "–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: https://t.me/channel1 @channel2 channel2"
        )

        await state.set_state(JoinStates.join)
        await message.answer(text)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª /join")


@join_router.message(JoinStates.join)
async def save_filters(message: Message, state: FSMContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /join"""
        if message.chat.type != ChatType.PRIVATE:
            return

        if not is_user_allowed(message.from_user.id):
            await message.answer("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω.")
            return

        group_list = clean_links(message.text.lower().split())


        text = (
                f"–û—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ...\n\n–ß–∞—Ç—ã: {group_list}"
        )
        await message.answer(text)
        response = await asyncio.to_thread(join_groups, group_list)

        await state.clear()
        await message.answer(f"–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–ª–≤–µ–Ω–æ {response} –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ")
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤–≤–µ–ª –≥—Ä—É–ø–ø—ã")